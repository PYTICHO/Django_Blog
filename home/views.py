import re
from django.shortcuts import redirect, render
from django.urls import reverse_lazy
from django.views.generic import ListView, DetailView, CreateView
from django.views.generic.edit import FormMixin
from django.contrib.auth.views import LoginView
from django.contrib.auth import logout, login


from .models import *
from .forms import *

# Create your views here.




class Home(ListView):
    model = Article
    template_name = 'home/home.html'
    context_object_name = 'articles'

    def get_context_data(self, *, object_list=None, **kwargs):
        context = super().get_context_data(**kwargs)
        context['title'] = '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞'
        return context





# –î–µ—Ç–∞–ª—å–Ω–æ –∫–∞–∂–¥–∞—è —Å—Ç–∞—Ç—å—è + –§–æ—Ä–º–∞ –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–æ–≤
class ArticleDetail(FormMixin, DetailView):
    model = Article
    template_name = 'home/article_detail.html'
    pk_url_kwarg = 'article_pk'
    context_object_name = 'article'
    form_class = CommentForm
    success_msg = '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å–æ–∑–¥–∞–Ω!'

    # data, –∫–æ—Ç–æ—Ä–∞—è –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤ —à–∞–±–ª–æ–Ω 
    def get_context_data(self, *, object_list=None, **kwargs):
        context = super().get_context_data(**kwargs)

        data = {
            'comments': Comment.objects.filter(article_id=context['article'].pk), #–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Ç–æ–ª—å–∫–æ –∫ –Ω–∞—à–µ–º—É –ø–æ—Å—Ç—É
        }
        

        for obj in data:
            context[obj] = data[obj]
        return context






                #–°–æ–∑–¥–∞–Ω–∏–µ –§–æ—Ä–º—ã –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ üëáüëá

    #–æ–±—Ä–∞–±–æ—Ç–∫–∞ post –∑–∞–ø—Ä–æ—Å–∞ (–∏–∑-–∑–∞ —Ç–æ–≥–æ —á—Ç–æ is_valid –ù–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ñ–æ—Ä–º—É, –º—ã —Å–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é form_valid, —á—Ç–æ–±—ã –µ–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å)
    def post(self, request, *args, **kwargs):
        form = self.get_form()

        if form.is_valid():   #–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º—É –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å
            return self.form_valid(form)
        else: 
            return self.form_invalid(form)


    #–°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ä–º—É
    def form_valid(self, form):
        self.object = form.save(commit=False)
        self.object.article = self.get_object()   #–£–∫–∞–∑—ã–≤–∞–µ–º –≤ ForeingKey –Ω–∞—à –æ–±—ä–µ–∫—Ç.
        self.object.comment_author = self.request.user
        self.object.save()

        return super().form_valid(form)



    #–û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫—É–¥–∞ –Ω–∞–ø—Ä–∞–≤–ª—è—Ç—Å—è –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    def get_success_url(self, **kwargs):
        return reverse_lazy('article_detail', kwargs={'article_pk': self.get_object().id}) #–ö–∞–∫ –≤ get_absolute_url()




#–§–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è –°—Ç–∞—Ç–µ–π
class NewArticle(CreateView):
    form_class = NewArticleForm
    template_name: str = 'home/newArticle.html'
    success_url = reverse_lazy('home')

    def get_context_data(self, *, object_list=None, **kwargs):
        context = super().get_context_data(**kwargs)


        data = {
            1: '1'
        }
        

        for obj in data:
            context[obj] = data[obj]
        return context


    #–æ–±—Ä–∞–±–æ—Ç–∫–∞ post –∑–∞–ø—Ä–æ—Å–∞ (–∏–∑-–∑–∞ —Ç–æ–≥–æ —á—Ç–æ is_valid –ù–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ñ–æ—Ä–º—É, –º—ã —Å–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é form_valid, —á—Ç–æ–±—ã –µ–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å)
    def post(self, request, *args, **kwargs):
        form = self.get_form()

        if form.is_valid():   #–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º—É –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å
            return self.form_valid(form)
        else: 
            return self.form_invalid(form)


    #–°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ä–º—É
    def form_valid(self, form):
        self.object = form.save(commit=False)
        self.object.author = self.request.user
        self.object.save()

        return super().form_valid(form)







# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class RegisterUser(CreateView):
    form_class = RegisterUserForm
    template_name = 'home/register.html'
    success_url = reverse_lazy('home')    #!!!!!!!!


    def get_context_data(self, *, object_list=None, **kwargs):
        context = super().get_context_data(**kwargs)

        data = {
            1: '1'
        }
        

        for obj in data:
            context[obj] = data[obj]
        return context



    def form_valid(self, form):
        user = form.save()
        login(self.request, user)
        return redirect('home')





# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class LoginUser(LoginView):
    form_class = LoginUserForm
    template_name = 'home/login.html'


    def get_context_data(self, *, object_list=None, **kwargs):
        context = super().get_context_data(**kwargs)

        data = {
                1: '1'
            }
            
        for obj in data:
            context[obj] = data[obj]
        return context


    
    def get_success_url(self):
        return reverse_lazy('home')





# –í—ã—Ö–æ–¥ —Å –∞–∫–∫–∞—É–Ω—Ç–∞
def logout_user(request):
    logout(request)
    return redirect('home')

